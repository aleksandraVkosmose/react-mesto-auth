{"ast":null,"code":"import _classCallCheck from \"/Users/aleksandramironova/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aleksandramironova/dev/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar Api = /*#__PURE__*/function () {\n  function Api(options) {\n    _classCallCheck(this, Api);\n    this._options = options;\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _createClass(Api, [{\n    key: \"_handleOriginalResponse\",\n    value: function _handleOriginalResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(\"Error: \".concat(res.status));\n    } // Получение карточек с сервера\n  }, {\n    key: \"getCards\",\n    value: function getCards() {\n      var _this = this;\n      return fetch(\"\".concat(this._url, \"/cards\"), {\n        method: 'GET',\n        headers: this._headers\n      }).then(function (res) {\n        return _this._handleOriginalResponse(res);\n      });\n    } // Добавление новой карточки через попап\n  }, {\n    key: \"setCard\",\n    value: function setCard(data) {\n      var _this2 = this;\n      return fetch(\"\".concat(this._url, \"/cards\"), {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(function (res) {\n        return _this2._handleOriginalResponse(res);\n      });\n    } // Ставим лайк карточке\n  }, {\n    key: \"setLike\",\n    value: function setLike(cardId, isLiked) {\n      var _this3 = this;\n      return fetch(\"\".concat(this._url, \"/cards/\").concat(cardId, \"/likes\"), {\n        method: \"\".concat(isLiked ? 'PUT' : 'DELETE'),\n        headers: this._headers\n      }).then(function (res) {\n        return _this3._handleOriginalResponse(res);\n      });\n    } // Удаление карточки\n  }, {\n    key: \"deleteCard\",\n    value: function deleteCard(cardId) {\n      var _this4 = this;\n      return fetch(\"\".concat(this._url, \"/cards/\").concat(cardId), {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(function (res) {\n        return _this4._handleOriginalResponse(res);\n      });\n    } // Получение информации о пользователе с сервера\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      var _this5 = this;\n      return fetch(\"\".concat(this._url, \"/users/me\"), {\n        method: 'GET',\n        headers: this._headers\n      }).then(function (res) {\n        return _this5._handleOriginalResponse(res);\n      });\n    } // Редактирование информации о пользователе через попап\n  }, {\n    key: \"setUserInfo\",\n    value: function setUserInfo(forms) {\n      var _this6 = this;\n      return fetch(\"\".concat(this._url, \"/users/me\"), {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(forms)\n      }).then(function (res) {\n        return _this6._handleOriginalResponse(res);\n      });\n    } // Редактирование аватара пользователя через попап\n  }, {\n    key: \"setUserAvatar\",\n    value: function setUserAvatar(data) {\n      var _this7 = this;\n      return fetch(\"\".concat(this._url, \"/users/me/avatar\"), {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      }).then(function (res) {\n        return _this7._handleOriginalResponse(res);\n      });\n    }\n  }]);\n  return Api;\n}();\nvar api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-59\",\n  headers: {\n    authorization: 'f7e16f72-6fdb-4cb4-9e4c-1f17e80e3d75',\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_options","_url","baseUrl","_headers","headers","_createClass","key","value","_handleOriginalResponse","res","ok","json","Promise","reject","concat","status","getCards","_this","fetch","method","then","setCard","data","_this2","body","JSON","stringify","name","link","setLike","cardId","isLiked","_this3","deleteCard","_this4","getUserInfo","_this5","setUserInfo","forms","_this6","setUserAvatar","_this7","avatar","api","authorization"],"sources":["/Users/aleksandramironova/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._options = options;\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _handleOriginalResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  // Получение карточек с сервера\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Добавление новой карточки через попап\n  setCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Ставим лайк карточке\n  setLike(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers,\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._handleOriginalResponse(res));\n  }\n\n  // Получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Редактирование информации о пользователе через попап\n  setUserInfo(forms) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(forms)\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Редактирование аватара пользователя через попап\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._handleOriginalResponse(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: `https://mesto.nomoreparties.co/v1/cohort-59`,\n  headers: {\n    authorization: 'f7e16f72-6fdb-4cb4-9e4c-1f17e80e3d75',\n    \"Content-Type\": \"application/json\",\n  }\n})\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}