{"version":3,"sources":["images/logo.svg","components/ProtectedRoute.js","contexts/CurrentUserContext.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Header.js","components/Footer.js","components/Card.js","components/Main.js","components/ImagePopup.js","utils/api.js","components/Register.js","components/Login.js","utils/authApi.js","components/InfoTooltip.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","ProtectedRoute","_ref","Component","component","props","_objectWithoutProperties","isLoggedIn","React","createElement","Navigate","to","CurrentUserContext","createContext","PopupWithForm","name","buttonText","title","children","isOpen","onClose","onSubmit","className","concat","type","onClick","noValidate","EditProfilePopup","onUpdateUser","onLoading","currentUser","useContext","_useState","useState","_useState2","_slicedToArray","about","setAbout","_useState3","_useState4","setName","useEffect","e","preventDefault","id","placeholder","minLength","maxLength","required","value","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","avatar","ref","AddPlacePopup","onAddPlace","placeName","setPlaceName","placeLink","setPlaceLink","link","Header","onSignOut","headerEmail","signUp","signIn","signOut","src","logoPath","alt","Routes","Route","path","element","Link","Footer","Card","card","onCardLike","onCardDelete","onCardClick","isLiked","likes","some","user","_id","isOwn","owner","cardLikeButtonClassName","deleteButtonClassName","length","Main","cards","onEditProfile","onEditAvatar","aria-label","map","key","ImagePopup","api","Api","options","_classCallCheck","this","_options","_url","baseUrl","_headers","headers","_createClass","res","ok","json","Promise","reject","status","_this","fetch","method","then","_handleOriginalResponse","data","_this2","body","JSON","stringify","cardId","_this3","_this4","_this5","forms","_this6","_this7","authorization","Content-Type","Register","onRegister","email","setEmail","password","setPassword","evt","autoComplete","Login","onLogin","authApi","AuthApi","token","Authorization","InfoTooltip","isSuccess","App","_React$useState","_React$useState2","isEditProfilePopupOpen","setIsEditProfilePopupOpen","_React$useState3","_React$useState4","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","_React$useState5","_React$useState6","isAddPlacePopupOpen","setIsAddPlacePopupOpen","_React$useState7","_React$useState8","selectedCard","setSelectedCard","setCurrentUser","isLoading","setIsLoading","_useState5","_useState6","setCards","_React$useState9","_React$useState10","isInfoTooltipSuccess","setIsInfoTooltipSuccess","_React$useState11","_React$useState12","isSuccessPopupOpen","setIsSuccessPopupOpen","_React$useState13","_React$useState14","setIsLoggedIn","_useState7","_useState8","setHeaderEmail","navigate","useNavigate","closeAllPopups","getUserInfo","profileInfo","catch","err","console","log","getCards","closeByEscape","document","addEventListener","removeEventListener","jwt","localStorage","getItem","checkToken","Provider","removeItem","registerUser","finally","loginUser","setItem","deleteCard","state","filter","item","setLike","newCard","setCard","_toConsumableArray","newUserInfo","setUserInfo","newAvatar","setUserAvatar","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2MCQzBC,EALQ,SAAHC,GAA2C,IAA1BC,EAASD,EAApBE,UAAyBC,EAAKC,YAAAJ,EAAA,eACtD,OACEG,EAAME,WAAaC,IAAAC,cAACN,EAAcE,GAAYG,IAAAC,cAACC,IAAQ,CAACC,GAAG,cCDhDC,EAFYJ,IAAMK,cAAc,IC2BhCC,MA3Bf,SAAsBZ,GAAmE,IAAhEa,EAAIb,EAAJa,KAAMC,EAAUd,EAAVc,WAAYC,EAAKf,EAALe,MAAOC,EAAQhB,EAARgB,SAAUC,EAAMjB,EAANiB,OAAQC,EAAOlB,EAAPkB,QAASC,EAAQnB,EAARmB,SAC3E,OACEb,IAAAC,cAAA,OAAKa,UAAS,eAAAC,OAAiBR,EAAI,KAAAQ,OAAIJ,EAAS,eAAiB,KAC/DX,IAAAC,cAAA,OAAKa,UAAS,oBACZd,IAAAC,cAAA,UACEa,UAAS,6BAETE,KAAK,SACLC,QAASL,IAEXZ,IAAAC,cAAA,QACEa,UAAS,2BAAAC,OAA6BR,GACtCA,KAAMA,EACNM,SAAUA,EACVK,YAAU,GAEVlB,IAAAC,cAAA,MAAIa,UAAS,iCAAAC,OAAmCR,IAC7CE,GAEFC,EACDV,IAAAC,cAAA,UAAQa,UAAU,qBAAqBE,KAAK,UAAUR,OCiDjDW,MAnEf,SAAyBzB,GAA+C,IAA5CkB,EAAOlB,EAAPkB,QAASQ,EAAY1B,EAAZ0B,aAAcC,EAAS3B,EAAT2B,UAAWV,EAAMjB,EAANiB,OAEpDW,EAActB,IAAMuB,WAAWnB,GAAoBoB,EAE/BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAAAI,EACEL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7BvB,EAAIwB,EAAA,GAAEC,EAAOD,EAAA,GAwBpB,OAtBAE,oBAAU,WACND,EAAQV,EAAYf,MAAQ,IAC5BsB,EAASP,EAAYM,OAAS,KAC/B,CAACN,EAAaX,IAqBbX,IAAAC,cAACK,EAAa,CACVC,KAAK,OACLE,MAAM,4HACND,WAAYa,EAAS,wHACrBR,SAvBR,SAAsBqB,GAClBA,EAAEC,iBAEFf,EAAa,CACTb,KAAMA,EACNqB,MAAOA,KAmBPjB,OAAQA,EACRC,QAASA,GACTZ,IAAAC,cAAA,SACIa,UAAU,sCACVsB,GAAG,aACHpB,KAAK,OACLT,KAAK,OACL8B,YAAY,qBACZC,UAAU,IACVC,UAAU,KACVC,UAAQ,EACRC,MAAOlC,GAAQ,GACfmC,SA3BZ,SAA0BR,GACtBF,EAAQE,EAAES,OAAOF,UA4BbzC,IAAAC,cAAA,QAAMa,UAAU,wCAChBd,IAAAC,cAAA,SACIa,UAAU,qCACVsB,GAAG,YACHpB,KAAK,OACLT,KAAK,QACL8B,YAAY,kCACZC,UAAU,IACVC,UAAU,MACVC,UAAQ,EACRC,MAAOb,GAAS,GAChBc,SApCZ,SAA2BR,GACvBL,EAASK,EAAES,OAAOF,UAqCdzC,IAAAC,cAAA,QAAMa,UAAU,yCCvBb8B,MAzCf,SAAwBlD,GAAiD,IAA9C2B,EAAS3B,EAAT2B,UAAWT,EAAOlB,EAAPkB,QAASiC,EAAcnD,EAAdmD,eAAgBlC,EAAMjB,EAANiB,OACrDmC,EAAY9C,IAAM+C,OAAO,MAkB/B,OAhBA/C,IAAMiC,UAAU,WACZa,EAAUE,QAAQP,MAAQ,IAC3B,CAAC9B,IAeAX,IAAAC,cAACK,EAAa,CACVC,KAAK,SACLE,MAAM,wFACND,WAAYa,EAAS,wHACrBR,SAjBR,SAAsBqB,GAClBA,EAAEC,iBAEFU,EAAe,CACXI,OAAQH,EAAUE,QAAQP,SAc1B9B,OAAQA,EACRC,QAASA,GACTZ,IAAAC,cAAA,SACIa,UAAU,wCACVsB,GAAG,eACHpB,KAAK,MACLT,KAAK,SACL8B,YAAY,yFACZG,UAAQ,EACRE,SAnBZ,WACI,OAAOI,EAAUE,QAAQP,OAmBjBS,IAAKJ,IAET9C,IAAAC,cAAA,QAAMa,UAAU,4CCyBbqC,MA9Df,SAAsBzD,GAA6C,IAA1CkB,EAAOlB,EAAPkB,QAASwC,EAAU1D,EAAV0D,WAAY/B,EAAS3B,EAAT2B,UAAWV,EAAMjB,EAANiB,OAAMa,EAC3BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvC6B,EAAS3B,EAAA,GAAE4B,EAAY5B,EAAA,GAAAI,EACIL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAvCyB,EAASxB,EAAA,GAAEyB,EAAYzB,EAAA,GAuB9B,OArBAE,oBAAU,WACNqB,EAAa,IACbE,EAAa,KACd,CAAC7C,IAmBFX,IAAAC,cAACK,EAAa,CACZC,KAAK,MACLE,MAAM,gEACND,WAAYa,EAAS,4GACrBR,SArBJ,SAAsBqB,GAClBA,EAAEC,iBACFiB,EAAW,CACT7C,KAAM8C,EACNI,KAAMF,KAkBR3C,QAASA,EACTD,OAAQA,GACRX,IAAAC,cAAA,SACIa,UAAU,uCACVsB,GAAG,cACHpB,KAAK,OACLqB,YAAY,mDACZ9B,KAAK,OACL+B,UAAU,IACVC,UAAU,KACVC,UAAQ,EACRC,MAAOY,EACPX,SA1BR,SAA+BR,GAC7BoB,EAAapB,EAAES,OAAOF,UA2BpBzC,IAAAC,cAAA,QAAMa,UAAU,yCACdd,IAAAC,cAAA,SACEa,UAAU,sCACVsB,GAAG,aACHpB,KAAK,MACLqB,YAAY,qGACZ9B,KAAK,OACLiC,UAAQ,EACRC,MAAOc,EACPb,SAjCR,SAA+BR,GAC7BsB,EAAatB,EAAES,OAAOF,UAkClBzC,IAAAC,cAAA,QAAMa,UAAU,2DClBT4C,MArCf,SAAehE,GAAsD,IAAnDiE,EAASjE,EAATiE,UAAWC,EAAWlE,EAAXkE,YAAaC,EAAMnE,EAANmE,OAAQC,EAAMpE,EAANoE,OAAQC,EAAOrE,EAAPqE,QACxD,OACE/D,IAAAC,cAAA,UAAQa,UAAU,UAChBd,IAAAC,cAAA,OACEa,UAAU,eACVkD,IAAKC,IACLC,IAAI,8EAENlE,IAAAC,cAACkE,IAAM,KACLnE,IAAAC,cAACmE,IAAK,CAACC,KAAK,WAAWC,QAAStE,IAAAC,cAACsE,IAAI,CACnCzD,UAAU,eACVX,GAAG,YACF0D,KAGH7D,IAAAC,cAACmE,IAAK,CAACC,KAAK,WAAWC,QAAStE,IAAAC,cAACsE,IAAI,CACnCzD,UAAU,eACVX,GAAG,WACF2D,KAGH9D,IAAAC,cAACmE,IAAK,CAACC,KAAK,KAAKC,QAAStE,IAAAC,cAAA,OAAKa,UAAU,qBACvCd,IAAAC,cAAA,KAAGa,UAAU,iBACV8C,GAEH5D,IAAAC,cAACsE,IAAI,CACHzD,UAAU,eACVG,QAAS0C,EACTxD,GAAG,WACF4D,SCvBES,MAPf,WACE,OACExE,IAAAC,cAAA,UAAQa,UAAU,UAChBd,IAAAC,cAAA,KAAGa,UAAU,iBAAgB,4BC2CpB2D,MA7Cf,SAAa/E,GAAkD,IAA/CgF,EAAIhF,EAAJgF,KAAMC,EAAUjF,EAAViF,WAAYC,EAAYlF,EAAZkF,aAAcC,EAAWnF,EAAXmF,YAExCvD,EAAcC,qBAAWnB,GACzB0E,EAAUJ,EAAKK,MAAMC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQ5D,EAAY4D,MAC3DC,EAAQT,EAAKU,MAAMF,MAAQ5D,EAAY4D,IAEvCG,EAAuB,wBAAAtE,OAA2B+D,EAAU,iCAAmC,IAC/FQ,EAAqB,0BAAAvE,OAA6BoE,EAAQ,mCAAqC,IAcrG,OACEnF,IAAAC,cAAA,WAASa,UAAU,WACjBd,IAAAC,cAAA,OAAKa,UAAU,eACboD,IAAKQ,EAAKnE,KACVyD,IAAKU,EAAKjB,KACVxC,QAjBN,WACE4D,EAAYH,MAiBTS,GAAQnF,IAAAC,cAAA,UACPa,UAAWwE,EACXtE,KAAK,SACLC,QAjBN,WACE2D,EAAaF,MAiBX1E,IAAAC,cAAA,OAAKa,UAAU,iBACbd,IAAAC,cAAA,MAAIa,UAAU,kBAAkB4D,EAAKnE,MACrCP,IAAAC,cAAA,OAAKa,UAAU,2BACbd,IAAAC,cAAA,UACAa,UAAWuE,EACXrE,KAAK,SACLC,QApBR,WACE0D,EAAWD,MAoBL1E,IAAAC,cAAA,QAAMa,UAAU,uBAAuB4D,EAAKK,MAAMQ,YCe7CC,MApDf,SAAa9F,GAA4F,IAAzF+F,EAAK/F,EAAL+F,MAAOC,EAAahG,EAAbgG,cAAeC,EAAYjG,EAAZiG,aAAcvC,EAAU1D,EAAV0D,WAAYyB,EAAWnF,EAAXmF,YAAaF,EAAUjF,EAAViF,WAAYC,EAAYlF,EAAZkF,aACjFtD,EAActB,IAAMuB,WAAWnB,GAErC,OAEEJ,IAAAC,cAAA,QAAMa,UAAU,QACdd,IAAAC,cAAA,WAASa,UAAU,WACjBd,IAAAC,cAAA,OAAKa,UAAU,iBACbd,IAAAC,cAAA,OACEa,UAAU,kBACVkD,IAAK1C,EAAY2B,OACjBiB,IAAI,yCAENlE,IAAAC,cAAA,UACEa,UAAU,yBACVE,KAAK,SACLC,QAAS,WACP0E,GAAa,OAGnB3F,IAAAC,cAAA,OAAKa,UAAU,iBACbd,IAAAC,cAAA,MAAIa,UAAU,kBAAkBQ,EAAYf,MAC5CP,IAAAC,cAAA,UACEa,UAAU,8BACVE,KAAK,SACLC,QAAS,WACPyE,GAAc,MAElB1F,IAAAC,cAAA,MAAIa,UAAU,qBAAqBQ,EAAYM,QAEjD5B,IAAAC,cAAA,UACEa,UAAU,6BACVE,KAAK,SACLC,QAAS,WACPmC,GAAW,OAGjBpD,IAAAC,cAAA,WAASa,UAAU,WAAW8E,aAAW,4EAEtCH,EAAMI,IAAI,SAACnB,GAAI,OACd1E,IAAAC,cAACwE,EAAI,CACHC,KAAMA,EACNoB,IAAKpB,EAAKQ,IACVN,aAAcA,EACdC,YAAaA,EACbF,WAAYA,SCjCToB,MAff,SAAmBrG,GAAoB,IAAjBgF,EAAIhF,EAAJgF,KAAM9D,EAAOlB,EAAPkB,QAC1B,OACEZ,IAAAC,cAAA,OAAKa,UAAS,0BAAAC,OAA4B2D,EAAKjB,KAAO,eAAiB,KACrEzD,IAAAC,cAAA,OAAKa,UAAU,yBACbd,IAAAC,cAAA,UACEa,UAAU,uDACVE,KAAK,SACLC,QAASL,IAEXZ,IAAAC,cAAA,OAAKa,UAAU,kBAAkBkD,IAAKU,EAAKjB,KAAMS,IAAKQ,EAAKnE,OAC3DP,IAAAC,cAAA,MAAIa,UAAU,qBAAqB4D,EAAKnE,uBC2EjCyF,EARH,IA/EH,WACP,SAAAC,EAAYC,GAASC,YAAAC,KAAAH,GACnBG,KAAKC,SAAWH,EAChBE,KAAKE,KAAOJ,EAAQK,QACpBH,KAAKI,SAAWN,EAAQO,QAwEzB,OAvEAC,YAAAT,EAAA,EAAAH,IAAA,0BAAArD,MAAA,SACuBkE,GACtB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAM,UAAAhG,OAAW4F,EAAIK,WAGtC,CAAAlB,IAAA,WAAArD,MAAA,WACW,IAAAwE,EAAAb,KACT,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,UAAU,CACjCa,OAAQ,MACRV,QAASL,KAAKI,WACbY,KAAK,SAAAT,GAAG,OAAIM,EAAKI,wBAAwBV,OAG9C,CAAAb,IAAA,UAAArD,MAAA,SACQ6E,GAAM,IAAAC,EAAAnB,KACZ,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,UAAU,CACjCa,OAAQ,OACRV,QAASL,KAAKI,SACdgB,KAAMC,KAAKC,UAAU,CACnBnH,KAAM+G,EAAK/G,KACXkD,KAAM6D,EAAK7D,SAEZ2D,KAAK,SAAAT,GAAG,OAAIY,EAAKF,wBAAwBV,OAG9C,CAAAb,IAAA,UAAArD,MAAA,SACQkF,EAAQ7C,GAAS,IAAA8C,EAAAxB,KACvB,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,WAAAvF,OAAU4G,EAAM,UAAU,CACjDR,OAAM,GAAApG,OAAK+D,EAAU,MAAQ,UAC7B2B,QAASL,KAAKI,WACbY,KAAK,SAAAT,GAAG,OAAIiB,EAAKP,wBAAwBV,OAG9C,CAAAb,IAAA,aAAArD,MAAA,SACWkF,GAAQ,IAAAE,EAAAzB,KACjB,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,WAAAvF,OAAU4G,GAAU,CAC3CR,OAAQ,SACRV,QAASL,KAAKI,WAEbY,KAAK,SAAAT,GAAG,OAAIkB,EAAKR,wBAAwBV,OAG9C,CAAAb,IAAA,cAAArD,MAAA,WACc,IAAAqF,EAAA1B,KACZ,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,aAAa,CACpCa,OAAQ,MACRV,QAASL,KAAKI,WACbY,KAAK,SAAAT,GAAG,OAAImB,EAAKT,wBAAwBV,OAG9C,CAAAb,IAAA,cAAArD,MAAA,SACYsF,GAAO,IAAAC,EAAA5B,KACjB,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,aAAa,CACpCa,OAAQ,QACRV,QAASL,KAAKI,SACdgB,KAAMC,KAAKC,UAAUK,KACpBX,KAAK,SAAAT,GAAG,OAAIqB,EAAKX,wBAAwBV,OAG9C,CAAAb,IAAA,gBAAArD,MAAA,SACc6E,GAAM,IAAAW,EAAA7B,KAClB,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,oBAAoB,CAC3Ca,OAAQ,QACRV,QAASL,KAAKI,SACdgB,KAAMC,KAAKC,UAAU,CACnBzE,OAAQqE,EAAKrE,WAEdmE,KAAK,SAAAT,GAAG,OAAIsB,EAAKZ,wBAAwBV,SAC7CV,EA5EM,GA+EG,CAAQ,CAClBM,QAAO,8CACPE,QAAS,CACPyB,cAAe,uCACfC,eAAgB,sBClBLC,MA9Df,SAAiB1I,GAA2B,IAAzBK,EAAUL,EAAVK,WAAYsI,EAAU3I,EAAV2I,WAAU7G,EACXC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B8G,EAAK5G,EAAA,GAAE6G,EAAQ7G,EAAA,GAAAI,EACUL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArC0G,EAAQzG,EAAA,GAAE0G,EAAW1G,EAAA,GAe5B,OAAIhC,EACOC,IAAAC,cAACC,IAAQ,CAACC,GAAG,OAIpBH,IAAAC,cAAA,WAASa,UAAU,SACfd,IAAAC,cAAA,OAAKa,UAAU,oBACXd,IAAAC,cAAA,MAAIa,UAAU,gBAAe,sEAC7Bd,IAAAC,cAAA,QACAY,SAdZ,SAAsBqB,GAClBA,EAAEC,iBACFkG,EAAWC,EAAOE,IAaV1H,UAAU,cACVI,YAAU,EACVX,KAAK,YACDP,IAAAC,cAAA,SACIa,UAAU,eACVsB,GAAG,QACH7B,KAAK,QACLS,KAAK,QACLqB,YAAY,QACZI,MAAO6F,EACP5F,SA7BpB,SAA2BgG,GACvBH,EAASG,EAAI/F,OAAOF,QA6BJkG,aAAa,QAGjB3I,IAAAC,cAAA,SACIa,UAAU,eACVsB,GAAG,WACH7B,KAAK,WACLS,KAAK,WACLqB,YAAY,uCACZI,MAAO+F,EACP9F,SA5CpB,SAA8BgG,GAC1BD,EAAYC,EAAI/F,OAAOF,QA4CPkG,aAAa,QAGjB3I,IAAAC,cAAA,UAAQe,KAAK,SAASF,UAAU,sBAAqB,gHACrDd,IAAAC,cAACsE,IAAI,CAACpE,GAAG,WAAWW,UAAU,eAAc,2JCGjD8H,MAvDf,SAAclJ,GAAwB,IAAtBK,EAAUL,EAAVK,WAAY8I,EAAOnJ,EAAPmJ,QAAOrH,EACLC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B8G,EAAK5G,EAAA,GAAE6G,EAAQ7G,EAAA,GAAAI,EACUL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArC0G,EAAQzG,EAAA,GAAE0G,EAAW1G,EAAA,GAe5B,OAAIhC,EACOC,IAAAC,cAACC,IAAQ,CAACC,GAAG,OAIpBH,IAAAC,cAAA,WAASa,UAAU,SACfd,IAAAC,cAAA,OAAKa,UAAU,oBACXd,IAAAC,cAAA,MAAIa,UAAU,gBAAe,4BAC7Bd,IAAAC,cAAA,QAAMY,SAblB,SAAsBqB,GAClBA,EAAEC,iBACF0G,EAAQP,EAAOE,IAWuB1H,UAAU,cAAcI,YAAU,GAC5DlB,IAAAC,cAAA,SACIa,UAAU,eACVsB,GAAG,QACH7B,KAAK,QACLS,KAAK,QACLqB,YAAY,QACZI,MAAO6F,EACP5F,SAzBpB,SAA2BgG,GACvBH,EAASG,EAAI/F,OAAOF,QAyBJkG,aAAa,QAGjB3I,IAAAC,cAAA,SACIa,UAAU,eACVsB,GAAG,WACH7B,KAAK,WACLS,KAAK,WACLqB,YAAY,uCACZI,MAAO+F,EACP9F,SAxCpB,SAA8BgG,GAC1BD,EAAYC,EAAI/F,OAAOF,QAwCPkG,aAAa,QAGjB3I,IAAAC,cAAA,UAAQa,UAAU,sBAAqB,sCCJ5CgI,EAPC,IAzCH,WACT,SAAAC,EAAY7C,GAASC,YAAAC,KAAA2C,GACjB3C,KAAKC,SAAWH,EAChBE,KAAKE,KAAOJ,EAAQK,QACpBH,KAAKI,SAAWN,EAAQO,QAkC3B,OAjCAC,YAAAqC,EAAA,EAAAjD,IAAA,eAAArD,MAAA,SAEY6F,EAAOE,GAAU,IAAAvB,EAAAb,KAC1B,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,WAAW,CAChCa,OAAQ,OACRV,QAASL,KAAKI,SACdgB,KAAMC,KAAKC,UAAU,CAAEY,QAAOE,eAC/BpB,KAAK,SAAAT,GAAG,OAAIM,EAAKI,wBAAwBV,OAC/C,CAAAb,IAAA,YAAArD,MAAA,SAES6F,EAAOE,GAAU,IAAAjB,EAAAnB,KACvB,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,WAAW,CAChCa,OAAQ,OACRV,QAASL,KAAKI,SACdgB,KAAMC,KAAKC,UAAU,CAAEY,QAAOE,eAC/BpB,KAAK,SAAAT,GAAG,OAAIY,EAAKF,wBAAwBV,OAC/C,CAAAb,IAAA,aAAArD,MAAA,SAEUuG,GAAO,IAAApB,EAAAxB,KACd,OAAOc,MAAK,GAAAnG,OAAIqF,KAAKE,KAAI,aAAa,CAClCa,OAAQ,MACRV,QAAS,CACL0B,eAAgB,mBAChBc,cAAa,UAAAlI,OAAYiI,MAE9B5B,KAAK,SAAAT,GAAG,OAAIiB,EAAKP,wBAAwBV,OAC/C,CAAAb,IAAA,0BAAArD,MAAA,SAEuBkE,GACpB,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAM,UAAAhG,OAAW4F,EAAIK,aACvC+B,EAtCQ,GAyCG,CAAY,CACxBxC,QAAS,gCACTE,QAAS,CACL0B,eAAgB,sBCdTe,MA5Bf,SAAoBxJ,GAAuC,IAApCa,EAAIb,EAAJa,KAAMK,EAAOlB,EAAPkB,QAASD,EAAMjB,EAANiB,OAAQwI,EAASzJ,EAATyJ,UAC1C,OACInJ,IAAAC,cAAA,OAAKa,UAAS,eAAAC,OAAiBR,EAAI,KAAAQ,OAAIJ,EAAS,eAAiB,KAC7DX,IAAAC,cAAA,OAAKa,UAAS,2CACVd,IAAAC,cAAA,UACIa,UAAS,6BACTE,KAAK,SACLC,QAASL,IAEbZ,IAAAC,cAAA,OACIa,UAAS,kBAAAC,OAAoBoI,EACvB,yBACA,8BAGVnJ,IAAAC,cAAA,MAAIa,UAAU,gBACTqI,EACK,wKACA,0MC4QXC,MA5Qf,WAAe,IAAAC,EAE+CrJ,IAAMyB,UAAS,GAAM6H,EAAA3H,YAAA0H,EAAA,GAA1EE,EAAsBD,EAAA,GAAEE,EAAyBF,EAAA,GAAAG,EACEzJ,IAAMyB,UAAS,GAAMiI,EAAA/H,YAAA8H,EAAA,GAAxEE,EAAqBD,EAAA,GAAEE,EAAwBF,EAAA,GAAAG,EACA7J,IAAMyB,UAAS,GAAMqI,EAAAnI,YAAAkI,EAAA,GAApEE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAAAG,EACVjK,IAAMyB,SAAS,IAAGyI,EAAAvI,YAAAsI,EAAA,GAAnDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAAA1I,EACEC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3CF,EAAWI,EAAA,GAAE2I,EAAc3I,EAAA,GAAAI,EACAL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA1CwI,EAASvI,EAAA,GAAEwI,EAAYxI,EAAA,GAAAyI,EACJ/I,mBAAS,IAAGgJ,EAAA9I,YAAA6I,EAAA,GAA/B/E,EAAKgF,EAAA,GAAEC,EAAQD,EAAA,GAAAE,EAEkC3K,IAAMyB,UAAS,GAAMmJ,EAAAjJ,YAAAgJ,EAAA,GAAtEE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAAAG,EACA/K,IAAMyB,UAAS,GAAMuJ,EAAArJ,YAAAoJ,EAAA,GAAlEE,GAAkBD,EAAA,GAAEE,GAAqBF,EAAA,GAAAG,GACZnL,IAAMyB,UAAS,GAAM2J,GAAAzJ,YAAAwJ,GAAA,GAAlDpL,GAAUqL,GAAA,GAAEC,GAAaD,GAAA,GAAAE,GACM7J,mBAAS,IAAG8J,GAAA5J,YAAA2J,GAAA,GAA3C1H,GAAW2H,GAAA,GAAEC,GAAcD,GAAA,GAC5BE,GAAWC,cAmBjB,SAASC,KACPnC,GAA0B,GAC1BI,GAAyB,GACzBI,GAAuB,GACvBkB,IAAsB,GACtBd,EAAgB,IAtBlBnI,oBAAU,WACR+D,EAAI4F,cACDxE,KAAK,SAAAyE,GAAW,OAAIxB,EAAewB,KACnCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAE5B/F,EAAIkG,WAAW9E,KAAK,SAAAE,GAClBoD,EAASpD,EAAKzB,IAAI,SAACnB,GAAI,MAAM,CAC3BQ,IAAKR,EAAKQ,IACV3E,KAAMmE,EAAKnE,KACXkD,KAAMiB,EAAKjB,KACXsB,MAAOL,EAAKK,MACZK,MAAOV,EAAKU,YAGb0G,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAC3B,IA0DH,IAAMpL,GAASgJ,GACVJ,GACAQ,GACAkB,IACAd,EAwEL,OAtEAlI,oBAAU,WACR,SAASkK,EAAczD,GACL,WAAZA,EAAI5C,KACN6F,KAIJ,GAAIhL,GAEF,OADAyL,SAASC,iBAAiB,UAAWF,GAC9B,kBAAMC,SAASE,oBAAoB,UAAWH,KAEtD,CAACxL,KAoCJsB,oBAAU,WACR,IAAMsK,EAAMC,aAAaC,QAAQ,OAC7BF,GACFzD,EACG4D,WAAWH,GACXnF,KAAK,SAACE,GACDA,IACF+D,IAAc,GACdG,GAAelE,EAAKA,KAAKgB,OACzBmD,GAAS,QAGZK,MAAM,SAACC,GAAG,OAAKC,QAAQC,IAAIF,MAE/B,CAACN,KAUFzL,IAAAC,cAACG,EAAmBuM,SAAQ,CAAClK,MAAOnB,GAClCtB,IAAAC,cAAA,OAAKa,UAAU,QAEbd,IAAAC,cAACyD,EAAM,CACLC,UAZR,WACE6I,aAAaI,WAAW,OACxBpB,GAAe,MACfH,IAAc,GACdI,GAAS,aASH7H,YAAaA,GACbC,OAAO,qEACPC,OAAO,iCACPC,QAAQ,mCAcV/D,IAAAC,cAACkE,IAAM,KACLnE,IAAAC,cAACmE,IAAK,CAACC,KAAK,WAAWC,QACrBtE,IAAAC,cAACmI,EAAQ,CAACC,WAlFpB,SAA4BC,EAAOE,GACjCM,EACG+D,aAAavE,EAAOE,GACpBpB,KAAK,SAACE,GACDA,IACFwD,GAAwB,GACxBW,GAAS,eAGZK,MAAM,SAACC,GACNjB,GAAwB,GACxBkB,QAAQC,IAAIF,KAEbe,QAAQ,kBAAM5B,IAAsB,UAyEjClL,IAAAC,cAACmE,IAAK,CAACC,KAAK,WAAWC,QACrBtE,IAAAC,cAAC2I,EAAK,CAACC,QAvEjB,SAAwBP,EAAOE,GAC7BM,EACGiE,UAAUzE,EAAOE,GACjBpB,KAAK,SAACE,GACDA,EAAK0B,QACPwC,GAAelD,GACf+C,IAAc,GACdmB,aAAaQ,QAAQ,MAAO1F,EAAK0B,OACjCyC,GAAS,QAGZK,MAAM,SAACC,GACNjB,GAAwB,GACxBI,IAAsB,GACtBc,QAAQC,IAAIF,UA6DV/L,IAAAC,cAACmE,IAAK,CAACC,KAAK,IAAIC,QACdtE,IAAAC,cAACR,EAAc,CACbG,UAAW4F,EACXE,cAAe8D,EACf7D,aAAciE,EACdxG,WAAY4G,EACZnF,YAAauF,EACbxF,aA3HZ,SAA0BF,GACxBsB,EAAIiH,WAAWvI,EAAKQ,KACjBkC,KAAK,kBAAMsD,EAAS,SAAAwC,GAAK,OAAIA,EAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKlI,MAAQR,EAAKQ,UACpE4G,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAyHlBpH,WArIZ,SAAwBD,GAEtB,IAAMI,EAAUJ,EAAKK,MAAMC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQ5D,EAAY4D,MAEjEc,EAAIqH,QAAQ3I,EAAKQ,KAAMJ,GACpBsC,KAAK,SAAAkG,GAAO,OAAI5C,EAAS,SAACwC,GAAK,OAAKA,EAAMrH,IAAI,SAACuH,GAAI,OAAKA,EAAKlI,MAAQR,EAAKQ,IAAMoI,EAAUF,QAC1FtB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAgIlBtG,MAAOA,EACP1F,WAAYA,GACZsE,KAAK,QAITrE,IAAAC,cAACmE,IAAK,CACJC,KAAK,IACLC,QAAStE,IAAAC,cAACC,IAAQ,CAACC,GAAIJ,GAAa,IAAM,gBAI9CC,IAAAC,cAACuE,EAAM,MAEPxE,IAAAC,cAACkD,EAAa,CACZC,WAhKR,SAA8BkE,GAC5BiD,GAAa,GACbvE,EAAIuH,QAAQjG,GACTF,KAAK,SAAAkG,GACJ5C,EAAQ,CAAE4C,GAAOvM,OAAAyM,YAAK/H,KACtBkG,OAEDG,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACzBe,QAAQ,kBAAMvC,GAAa,MAyJxB5J,OAAQoJ,EACRnJ,QAAS+K,GACTtK,UAAWiJ,IAGbtK,IAAAC,cAACkB,EAAgB,CACfR,OAAQ4I,EACRnI,aAnLR,SAA0BqM,GACxBlD,GAAa,GACbvE,EAAI0H,YAAYD,GACbrG,KAAK,SAAAE,GACJ+C,EAAe/C,GACfqE,OAEDG,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACzBe,QAAQ,kBAAMvC,GAAa,MA4KxB3J,QAAS+K,GACTtK,UAAWiJ,IAGbtK,IAAAC,cAAC2C,EAAe,CACdC,eApMR,SAA4B8K,GAC1BpD,GAAa,GACbvE,EAAI4H,cAAcD,GACfvG,KAAK,SAAAE,GACJ+C,EAAe/C,GACfqE,OAEDG,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KACzBe,QAAQ,kBAAMvC,GAAa,MA6LxB5J,OAAQgJ,EACR/I,QAAS+K,GACTtK,UAAWiJ,IAKbtK,IAAAC,cAAC8F,EAAU,CACTrB,KAAMyF,EACNvJ,QAAS+K,KAIX3L,IAAAC,cAACK,EAAa,CACZC,KAAK,UACLE,MAAM,2DACND,WAAW,iBAEbR,IAAAC,cAACiJ,EAAW,CACVC,UAAW0B,EACXlK,OAAQsK,GACRrK,QAAS+K,GACTpL,KAAM,qBClRHsN,IAASC,WAAW1B,SAAS2B,eAAe,SACpDC,OACDhO,IAAAC,cAACD,IAAMiO,WAAU,KACbjO,IAAAC,cAACiO,IAAa,KACVlO,IAAAC,cAACmJ,EAAG","file":"static/js/main.fdc80b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7baba3c1.svg\";","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    props.isLoggedIn ? <Component {...props} /> : <Navigate to=\"/sign-in\" />\n)}\n\nexport default ProtectedRoute;","import React from 'react';\n\nconst CurrentUserContext = React.createContext('');\n\nexport default CurrentUserContext;","import React from 'react';\n\nfunction PopupWithForm({ name, buttonText, title, children, isOpen, onClose, onSubmit }) {\n  return (\n    <div className={`popup popup-${name} ${isOpen ? \"popup_opened\" : \"\"}`}>\n      <div className={`popup__container`}>\n        <button\n          className={`popup__button-close button`}\n      \n          type=\"button\"\n          onClick={onClose}\n        />\n        <form\n          className={`popup__form popup__form-${name}`}\n          name={name}\n          onSubmit={onSubmit}\n          noValidate\n        >\n          <h4 className={`popup__profile popup__profile-${name}`}>\n            {title}\n          </h4>\n          {children}\n          <button className=\"popup__button-save\" type=\"submit\">{buttonText}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React, { useState, useEffect } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup({ onClose, onUpdateUser, onLoading, isOpen }) {\n//подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [about, setAbout] = useState('');\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        setName(currentUser.name || \"\");\n        setAbout(currentUser.about || \"\");\n    }, [currentUser, isOpen]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n// передаем значения управляемых компонентов во внешний обработчик\n        onUpdateUser({\n            name: name,\n            about: about,\n        });\n    }\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeAbout(e) {\n        setAbout(e.target.value);\n    }\n\n    return (\n        \n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            buttonText={onLoading ? `Сохранение` : `Сохранить`}\n            onSubmit={handleSubmit}\n            isOpen={isOpen}\n            onClose={onClose}>\n            <input\n                className=\"popup__input popup__input_type_name\"\n                id=\"name-input\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Имя\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                value={name || \"\"}\n                onChange={handleChangeName}\n            />\n            <span className=\"popup__input-error name-input-error\" />\n            <input\n                className=\"popup__input popup__input_type_job\"\n                id=\"job-input\"\n                type=\"text\"\n                name=\"about\"\n                placeholder=\"О себе\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                value={about || \"\"}\n                onChange={handleChangeAbout}\n            />\n            <span className=\"popup__input-error job-input-error\" />\n        </PopupWithForm>\n    )\n}\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ onLoading, onClose, onUpdateAvatar, isOpen }) {\n    const avatarRef = React.useRef(null);\n\n    React.useEffect(() => {\n        avatarRef.current.value = \"\";\n    }, [isOpen]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        onUpdateAvatar({\n            avatar: avatarRef.current.value\n        });\n    }\n\n    function handleChangeAvatar() {\n        return avatarRef.current.value;\n    }\n    \n    return (\n        <PopupWithForm\n            name=\"avatar\"\n            title=\"Обновить аватар\"\n            buttonText={onLoading ? `Сохранение` : `Сохранить`}\n            onSubmit={handleSubmit}\n            isOpen={isOpen}\n            onClose={onClose}>\n            <input\n                className=\"popup__input popup__input_type_avatar\"\n                id=\"avatar-input\"\n                type=\"url\"\n                name=\"avatar\"\n                placeholder=\"Ссылка на аватар\"\n                required\n                onChange={handleChangeAvatar}\n                ref={avatarRef}\n            />\n            <span className=\"popup__input-error avatar-input-error\" />\n        </PopupWithForm>\n    )\n}\nexport default EditAvatarPopup;","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ onClose, onAddPlace, onLoading, isOpen }) {\n  const [placeName, setPlaceName] = useState('');\n  const [placeLink, setPlaceLink] = useState('');\n\n  useEffect(() => {\n      setPlaceName('');\n      setPlaceLink('');\n  }, [isOpen]);\n\n  function handleSubmit(e) {\n      e.preventDefault();\n      onAddPlace({\n        name: placeName,\n        link: placeLink,\n    });\n  }\n\n  function handleChangePlaceName(e) {\n    setPlaceName(e.target.value);\n  }\n\n  function handleChangePlaceLink(e) {\n    setPlaceLink(e.target.value);\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add\"\n      title=\"Новое место\"\n      buttonText={onLoading ? `Сохранение` : `Создать`}\n      onSubmit={handleSubmit}\n      onClose={onClose}\n      isOpen={isOpen}>\n      <input\n          className=\"popup__input popup__input_type_place\"\n          id=\"place-input\"\n          type=\"text\"\n          placeholder=\"Название\"\n          name=\"name\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          required\n          value={placeName}\n          onChange={handleChangePlaceName}\n      />\n      <span className=\"popup__input-error place-input-error\" />\n        <input\n          className=\"popup__input popup__input_type_link\"\n          id=\"link-input\"\n          type=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          name=\"link\"\n          required\n          value={placeLink}\n          onChange={handleChangePlaceLink}\n      />\n        <span className=\"popup__input-error link-input-error\" />\n\n    </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;","import React from \"react\";\nimport logoPath from '../images/logo.svg'\nimport { Link, Route, Routes } from \"react-router-dom\";\n\nfunction Header({ onSignOut, headerEmail, signUp, signIn, signOut }) {\n  return (\n    <header className=\"header\">\n      <img\n        className=\"header__logo\"\n        src={logoPath}\n        alt=\"логотип место\"\n      />\n      <Routes>\n        <Route path=\"/sign-in\" element={<Link\n          className=\"header__link\"\n          to=\"/sign-up\">\n          {signUp}\n        </Link>} />\n\n        <Route path=\"/sign-up\" element={<Link\n          className=\"header__link\"\n          to=\"sign-in\">\n          {signIn}\n        </Link>} />\n\n        <Route path=\"/*\" element={<div className=\"header__container\">\n          <p className=\"header__email\">\n            {headerEmail}\n          </p>\n          <Link\n            className=\"header__exit\"\n            onClick={onSignOut}\n            to=\"sign-in\">\n            {signOut}\n          </Link>\n        </div>} />\n      </Routes>\n\n    </header>\n  );\n}\nexport default Header;","import React from \"react\";\n\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__autor\">© 2020 Mesto Russia</p>\n    </footer>\n  );\n}\nexport default Footer;","import React from 'react';\nimport { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardLike, onCardDelete, onCardClick }) {\n\n  const currentUser = useContext(CurrentUserContext);\n  const isLiked = card.likes.some(user => user._id === currentUser._id);\n  const isOwn = card.owner._id === currentUser._id;\n\n  const cardLikeButtonClassName = `element__button-like ${isLiked ? 'element__button-like_is-active' : ''}`;\n  const deleteButtonClassName = `element__button-delete ${isOwn ? 'element__button-delete_is-active' : ''}`;\n\n  function handleCardClick() {\n    onCardClick(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  return (\n    <article className=\"element\">\n      <img className=\"element__img\"\n        alt={card.name}\n        src={card.link}\n        onClick={handleCardClick} />\n      {isOwn &&<button\n        className={deleteButtonClassName}\n        type=\"button\"\n        onClick={handleDeleteClick} />}\n      <div className=\"element__info\">\n        <h3 className=\"element__title\">{card.name}</h3>\n        <div className=\"element__like-container\">\n          <button\n          className={cardLikeButtonClassName}\n          type=\"button\"\n          onClick={handleLikeClick} />\n          <span className=\"element__like-count\">{card.likes.length}</span>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Card from './Card';\n\n\nfunction Main({ cards, onEditProfile, onEditAvatar, onAddPlace, onCardClick, onCardLike, onCardDelete }) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n\n    <main className=\"main\">\n      <section className=\"profile\">\n        <div className=\"profile__card\">\n          <img\n            className=\"profile__avatar\"\n            src={currentUser.avatar}\n            alt=\"аватар\"\n          />\n          <button\n            className=\"profile__avatar-button\"\n            type=\"button\"\n            onClick={() => {\n              onEditAvatar(true)\n            }} />\n        </div>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__title\">{currentUser.name}</h1>\n          <button\n            className=\"profile__button-edit button\"\n            type=\"button\"\n            onClick={() => {\n              onEditProfile(true)\n            }} />\n          <h2 className=\"profile__subtitle\">{currentUser.about}</h2>\n        </div>\n        <button\n          className=\"profile__button-add button\"\n          type=\"button\"\n          onClick={() => {\n            onAddPlace(true)\n          }} />\n      </section>\n      <section className=\"elements\" aria-label=\"Фотокарточки\">\n\n        {cards.map((card) => (\n          <Card\n            card={card}\n            key={card._id}\n            onCardDelete={onCardDelete}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike} />\n        ))}\n\n      </section>\n    </main>\n  );\n}\nexport default Main;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n  return (\n    <div className={`popup popup_photo-card ${card.link ? \"popup_opened\" : \"\"}`}>\n      <div className=\"popup__container-card\">\n        <button\n          className=\"popup__button-close button popup__button-close-photo\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <img className=\"popup__img-card\" src={card.link} alt={card.name} />\n        <h4 className=\"popup__title-card\">{card.name}</h4>\n      </div>\n    </div>\n  )\n}\nexport default ImagePopup;","class Api {\n  constructor(options) {\n    this._options = options;\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _handleOriginalResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  // Получение карточек с сервера\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Добавление новой карточки через попап\n  setCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Ставим лайк карточке\n  setLike(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${isLiked ? 'PUT' : 'DELETE'}`,\n      headers: this._headers,\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Удаление карточки\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._handleOriginalResponse(res));\n  }\n\n  // Получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Редактирование информации о пользователе через попап\n  setUserInfo(forms) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(forms)\n    }).then(res => this._handleOriginalResponse(res))\n  }\n\n  // Редактирование аватара пользователя через попап\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => this._handleOriginalResponse(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: `https://mesto.nomoreparties.co/v1/cohort-59`,\n  headers: {\n    authorization: 'f7e16f72-6fdb-4cb4-9e4c-1f17e80e3d75',\n    \"Content-Type\": \"application/json\",\n  }\n})\n\nexport default api;","import React, {useState} from \"react\";\nimport {Link, Navigate} from \"react-router-dom\";\n\nfunction Register({isLoggedIn, onRegister}) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handlePasswordChange(evt) {\n        setPassword(evt.target.value);\n    }\n\n    function handleEmailChange(evt) {\n        setEmail(evt.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onRegister(email, password);\n    }\n\n    if (isLoggedIn) {\n        return <Navigate to=\"/*\"/>;\n    }\n\n    return (\n        <section className='login'>\n            <div className='login__container'>\n                <h2 className='login__title'>Регистрация</h2>\n                <form \n                onSubmit={handleSubmit}\n                className=\"login__form\"\n                noValidate\n                name=\"register\">\n                    <input\n                        className=\"login__input\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={handleEmailChange}\n                        autoComplete=\"off\"\n                    />\n\n                    <input\n                        className=\"login__input\"\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Пароль\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                        autoComplete=\"off\"\n                    />\n\n                    <button type=\"submit\" className='login__button-save'>Зарегистрироваться</button>\n                    <Link to=\"/sign-in\" className=\"login__link\">\n                    Уже зарегистрированы? Войти\n                </Link>\n                </form>\n            </div>\n        </section>\n    );\n}\n\nexport default Register;","import React, {useState} from \"react\";\nimport {Navigate} from \"react-router-dom\";\n\n\nfunction Login({isLoggedIn, onLogin}) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handlePasswordChange(evt) {\n        setPassword(evt.target.value);\n    }\n\n    function handleEmailChange(evt) {\n        setEmail(evt.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        onLogin(email, password);\n    }\n\n    if (isLoggedIn) {\n        return <Navigate to=\"/*\"/>;\n    }\n\n    return (\n        <section className='login'>\n            <div className='login__container'>\n                <h2 className='login__title'>Вход</h2>\n                <form onSubmit={handleSubmit} className=\"login__form\" noValidate>\n                    <input\n                        className=\"login__input\"\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={email}\n                        onChange={handleEmailChange}\n                        autoComplete=\"off\"\n                    />\n\n                    <input\n                        className=\"login__input\"\n                        id=\"password\"\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Пароль\"\n                        value={password}\n                        onChange={handlePasswordChange}\n                        autoComplete=\"off\"\n                    />\n\n                    <button className='login__button-save'>Войти</button>\n                </form>\n            </div>\n        </section>\n    );\n}\n\nexport default Login;","class AuthApi {\n    constructor(options) {\n        this._options = options;\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    registerUser(email, password) {\n        return fetch(`${this._url}/signup`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({ email, password }),\n        }).then(res => this._handleOriginalResponse(res));\n    }\n\n    loginUser(email, password) {\n        return fetch(`${this._url}/signin`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({ email, password }),\n        }).then(res => this._handleOriginalResponse(res));\n    }\n\n    checkToken(token) {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n            },\n        }).then(res => this._handleOriginalResponse(res));\n    }\n\n    _handleOriginalResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Error: ${res.status}`);\n    }\n}\n\nconst authApi = new AuthApi({\n    baseUrl: \"https://auth.nomoreparties.co\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default authApi;","import React from \"react\";\n\nfunction InfoTooltip({ name, onClose, isOpen, isSuccess }) {\n    return (\n        <div className={`popup popup-${name} ${isOpen ? \"popup_opened\" : \"\"}`}>\n            <div className={`popup__container popup__container-state`}>\n                <button\n                    className={`popup__button-close button`}\n                    type=\"button\"\n                    onClick={onClose}\n                />\n                <div\n                    className={`popup__success ${isSuccess\n                        ? \"popup__success_type_ok\"\n                        : \"popup__success_type_fail\"\n                        }`}\n                />\n                <h4 className=\"popup__title\">\n                    {isSuccess\n                        ? \"Вы успешно зарегистрировались!\"\n                        : \"Что-то пошло не так! Попробуйте еще раз.\"}\n                </h4>\n               \n            </div>\n        </div>\n\n\n    );\n}\n\nexport default InfoTooltip;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport ProtectedRoute from './ProtectedRoute';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/api\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport authApi from \"../utils/authApi\";\nimport InfoTooltip from \"./InfoTooltip\";\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [cards, setCards] = useState([]);\n\n  const [isInfoTooltipSuccess, setIsInfoTooltipSuccess] = React.useState(false);\n  const [isSuccessPopupOpen, setIsSuccessPopupOpen] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [headerEmail, setHeaderEmail] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then(profileInfo => setCurrentUser(profileInfo))\n      .catch(err => console.log(err))\n\n    api.getCards().then(data => {\n      setCards(data.map((card) => ({\n        _id: card._id,\n        name: card.name,\n        link: card.link,\n        likes: card.likes,\n        owner: card.owner\n      })))\n    })\n      .catch(err => console.log(err))\n  }, []);\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsSuccessPopupOpen(false)\n    setSelectedCard({});\n  }\n\n  function handleUpdateAvatar(newAvatar) {\n    setIsLoading(true);\n    api.setUserAvatar(newAvatar)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false))\n  }\n\n  function handleUpdateUser(newUserInfo) {\n    setIsLoading(true);\n    api.setUserInfo(newUserInfo)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleAddPlaceSubmit(data) {\n    setIsLoading(true);\n    api.setCard(data)\n      .then(newCard => {\n        setCards([newCard, ...cards])\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(user => user._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.setLike(card._id, !isLiked)\n      .then(newCard => setCards((state) => state.map((item) => item._id === card._id ? newCard : item)))\n      .catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => setCards(state => state.filter(item => item._id !== card._id)))\n      .catch(err => console.log(err));\n  }\n\n  const isOpen = isEditAvatarPopupOpen\n    || isEditProfilePopupOpen\n    || isAddPlacePopupOpen\n    || isSuccessPopupOpen\n    || selectedCard;\n\n  useEffect(() => {\n    function closeByEscape(evt) {\n      if (evt.key === \"Escape\") {\n        closeAllPopups();\n      }\n    }\n\n    if (isOpen) {\n      document.addEventListener(\"keydown\", closeByEscape);\n      return () => document.removeEventListener(\"keydown\", closeByEscape);\n    }\n  }, [isOpen]);\n\n  function handleRegisterUser(email, password) {\n    authApi\n      .registerUser(email, password)\n      .then((data) => {\n        if (data) {\n          setIsInfoTooltipSuccess(true);\n          navigate(\"/sign-in\");\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipSuccess(false);\n        console.log(err);\n      })\n      .finally(() => setIsSuccessPopupOpen(true));\n  }\n\n  function handleAuthUser(email, password) {\n    authApi\n      .loginUser(email, password)\n      .then((data) => {\n        if (data.token) {\n          setHeaderEmail(email);\n          setIsLoggedIn(true);\n          localStorage.setItem(\"jwt\", data.token);\n          navigate(\"/\");\n        }\n      })\n      .catch((err) => {\n        setIsInfoTooltipSuccess(false);\n        setIsSuccessPopupOpen(true);\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      authApi\n        .checkToken(jwt)\n        .then((data) => {\n          if (data) {\n            setIsLoggedIn(true);\n            setHeaderEmail(data.data.email);\n            navigate(\"/\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [navigate]);\n\n  function handleSignOut() {\n    localStorage.removeItem(\"jwt\");\n    setHeaderEmail(null);\n    setIsLoggedIn(false);\n    navigate(\"/sign-in\");\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n\n        <Header\n          onSignOut={handleSignOut}\n          headerEmail={headerEmail}\n          signUp=\"Регистрация\"\n          signIn=\"Войти\"\n          signOut=\"Выйти\" />\n\n        {/* <ProtectedRoute\n          component={Main}\n          onEditProfile={setIsEditProfilePopupOpen}\n          onEditAvatar={setIsEditAvatarPopupOpen}\n          onAddPlace={setIsAddPlacePopupOpen}\n          onCardClick={setSelectedCard}\n          onCardDelete={handleCardDelete}\n          onCardLike={handleCardLike}\n          cards={cards}\n          isLoggedIn={isLoggedIn}\n          path=\"/\"/> */}\n\n        <Routes>\n          <Route path=\"/sign-up\" element={\n            <Register onRegister={handleRegisterUser} />\n          }\n          />\n\n          <Route path=\"/sign-in\" element={\n            <Login onLogin={handleAuthUser} />\n          }\n          />\n\n          <Route path=\"/\" element={\n            <ProtectedRoute\n              component={Main}\n              onEditProfile={setIsEditProfilePopupOpen}\n              onEditAvatar={setIsEditAvatarPopupOpen}\n              onAddPlace={setIsAddPlacePopupOpen}\n              onCardClick={setSelectedCard}\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n              cards={cards}\n              isLoggedIn={isLoggedIn}\n              path=\"/\" />\n          }\n          />\n\n          <Route\n            path=\"*\"\n            element={<Navigate to={isLoggedIn ? '/' : '/sign-in'} />}\n          />\n        </Routes>\n\n        <Footer />\n\n        <AddPlacePopup\n          onAddPlace={handleAddPlaceSubmit}\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onLoading={isLoading}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onUpdateUser={handleUpdateUser}\n          onClose={closeAllPopups}\n          onLoading={isLoading}\n        />\n\n        <EditAvatarPopup\n          onUpdateAvatar={handleUpdateAvatar}\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onLoading={isLoading}\n        />\n\n        {/* popup полноразмерное фото */}\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups} />\n\n        {/* popup подтверждения*/}\n\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          buttonText=\"Да\" />\n\n        <InfoTooltip\n          isSuccess={isInfoTooltipSuccess}\n          isOpen={isSuccessPopupOpen}\n          onClose={closeAllPopups}\n          name={\"success\"}\n        />\n\n      </div>\n    </CurrentUserContext.Provider >\n  );\n}\n\nexport default App;\n","import { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/App';\nimport React from 'react';\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>\n);"],"sourceRoot":""}